{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cturtle.js","webpack:///webpack/bootstrap 4a9d15352bafe9473017","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","defineProperty","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","getter","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","Turtle","x","arguments","y","angle","lineWidth","strokeStyle","Math","cos","radians","sin","mod","size","color","CTurtle","_Turtle","mem","ctx","_this","tape","fromX","fromY","toX","toY","log","command","args","push","slice","instr","shift","beginPath","moveTo","lineTo","stroke","closePath","strokeWidth","innerAnimate","window","requestAnimationFrame","Number","n","degrees","PI"],"mappings":"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","file":"cturtle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cturtle\"] = factory();\n\telse\n\t\troot[\"cturtle\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cturtle\"] = factory();\n\telse\n\t\troot[\"cturtle\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Base turtle\n\t\n\tvar Turtle = function () {\n\t\tfunction Turtle() {\n\t\t\tvar x = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\t\tvar y = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\t\tvar angle = arguments.length <= 2 || arguments[2] === undefined ? 90 : arguments[2];\n\t\n\t\t\t_classCallCheck(this, Turtle);\n\t\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.angle = angle;\n\t\t\tthis.lineWidth = 1;\n\t\t\tthis.strokeStyle = \"#000\";\n\t\t}\n\t\n\t\t_createClass(Turtle, [{\n\t\t\tkey: \"forward\",\n\t\t\tvalue: function forward(length) {\n\t\t\t\t//console.log(this.x, this.y)\n\t\t\t\tthis.x += length * Math.cos(Math.radians(this.angle));\n\t\t\t\tthis.y += length * Math.sin(Math.radians(this.angle));\n\t\t\t\t//console.log(this.x, this.y)\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"backward\",\n\t\t\tvalue: function backward(length) {\n\t\t\t\tthis.x -= length * Math.cos(Math.radians(this.angle));\n\t\t\t\tthis.y -= length * Math.sin(Math.radians(this.angle));\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"left\",\n\t\t\tvalue: function left(angle) {\n\t\t\t\t//console.log(this.angle)\n\t\t\t\tthis.angle += angle;\n\t\t\t\tthis.angle = this.angle.mod(360);\n\t\t\t\t//console.log(this.angle)\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"right\",\n\t\t\tvalue: function right(angle) {\n\t\t\t\t//console.log(this.angle)\n\t\t\t\tthis.angle -= angle;\n\t\t\t\tthis.angle = this.angle.mod(360);\n\t\t\t\t//console.log(this.angle)\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"pensize\",\n\t\t\tvalue: function pensize(size) {\n\t\t\t\tthis.lineWidth = size;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"pencolor\",\n\t\t\tvalue: function pencolor(color) {\n\t\t\t\tthis.strokeStyle = color;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Turtle;\n\t}();\n\t\n\t// CTurtle\n\t\n\t\n\tvar CTurtle = exports.CTurtle = function (_Turtle) {\n\t\t_inherits(CTurtle, _Turtle);\n\t\n\t\tfunction CTurtle() {\n\t\t\tvar x = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\t\tvar y = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\t\tvar angle = arguments.length <= 2 || arguments[2] === undefined ? 90 : arguments[2];\n\t\t\tvar mem = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];\n\t\t\tvar ctx = arguments[4];\n\t\n\t\t\t_classCallCheck(this, CTurtle);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CTurtle).call(this, x, y, angle));\n\t\n\t\t\t_this.ctx = ctx;\n\t\t\t_this.mem = mem;\n\t\t\t_this.tape = [];\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(CTurtle, [{\n\t\t\tkey: \"forward\",\n\t\t\tvalue: function forward(length) {\n\t\t\t\tvar fromX = this.x;\n\t\t\t\tvar fromY = this.y;\n\t\n\t\t\t\t_get(Object.getPrototypeOf(CTurtle.prototype), \"forward\", this).call(this, length);\n\t\t\t\tvar toX = this.x;\n\t\t\t\tvar toY = this.y;\n\t\n\t\t\t\tvar log = { command: \"FORWARD\",\n\t\t\t\t\targs: [[fromX, fromY], [toX, toY]]\n\t\t\t\t};\n\t\t\t\tthis.mem && this.tape.push(log);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"backward\",\n\t\t\tvalue: function backward(length) {\n\t\t\t\tvar fromX = this.x;\n\t\t\t\tvar fromY = this.y;\n\t\n\t\t\t\t_get(Object.getPrototypeOf(CTurtle.prototype), \"backward\", this).call(this, length);\n\t\t\t\tvar toX = this.x;\n\t\t\t\tvar toY = this.y;\n\t\n\t\t\t\tvar log = { command: \"FORWARD\",\n\t\t\t\t\targs: [[fromX, fromY], [toX, toY]]\n\t\t\t\t};\n\t\t\t\tthis.mem && this.tape.push(log);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"pensize\",\n\t\t\tvalue: function pensize(size) {\n\t\t\t\t_get(Object.getPrototypeOf(CTurtle.prototype), \"pensize\", this).call(this, size);\n\t\t\t\tthis.mem && this.tape.push({ command: \"PENSIZE\", args: size });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"pencolor\",\n\t\t\tvalue: function pencolor(color) {\n\t\t\t\t_get(Object.getPrototypeOf(CTurtle.prototype), \"pencolor\", this).call(this, color);\n\t\t\t\tthis.mem && this.tape.push({ command: \"PENCOLOR\", args: color });\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"render\",\n\t\t\tvalue: function render() {\n\t\t\t\tvar tape = this.tape.slice();\n\t\t\t\twhile (tape.length > 0) {\n\t\t\t\t\tvar instr = tape.shift();\n\t\t\t\t\tif (instr.command == \"FORWARD\" || instr.command == \"BACKWARD\") {\n\t\t\t\t\t\tthis.ctx.beginPath();\n\t\t\t\t\t\tthis.ctx.moveTo(instr.args[0][0], instr.args[0][1]);\n\t\t\t\t\t\tthis.ctx.lineTo(instr.args[1][0], instr.args[1][1]);\n\t\t\t\t\t\tthis.ctx.stroke();\n\t\t\t\t\t\tthis.ctx.closePath();\n\t\t\t\t\t} else if (instr.command == \"PENSIZE\") {\n\t\t\t\t\t\tthis.ctx.strokeWidth = instr.args;\n\t\t\t\t\t} else if (instr.command == \"PENCOLOR\") {\n\t\t\t\t\t\tthis.ctx.strokeStyle = instr.args;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"animate\",\n\t\t\tvalue: function animate() {\n\t\t\t\tvar tape = this.tape.slice();\n\t\t\t\tvar mem = this.mem;\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\twindow.requestAnimationFrame(innerAnimate);\n\t\n\t\t\t\tfunction innerAnimate() {\n\t\t\t\t\tif (mem && tape.length > 0) {\n\t\t\t\t\t\tvar instr = tape.shift();\n\t\t\t\t\t\tif (instr.command == \"FORWARD\" || instr.command == \"BACKWARD\") {\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(instr.args[0][0], instr.args[0][1]);\n\t\t\t\t\t\t\tctx.lineTo(instr.args[1][0], instr.args[1][1]);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t} else if (instr.command == \"PENSIZE\") {\n\t\t\t\t\t\t\tctx.strokeWidth = instr.args;\n\t\t\t\t\t\t} else if (instr.command == \"PENCOLOR\") {\n\t\t\t\t\t\t\tctx.strokeStyle = instr.args;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.requestAnimationFrame(innerAnimate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn CTurtle;\n\t}(Turtle);\n\t\n\t// Trignometry utilities\n\t\n\t\n\tNumber.prototype.mod = function (n) {\n\t\treturn (this % n + n) % n;\n\t};\n\t\n\tMath.radians = function (degrees) {\n\t\treturn degrees * Math.PI / 180;\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** cturtle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4a9d15352bafe9473017\n **/","// Base turtle\nclass Turtle {\n\n\tconstructor(x=0, y=0, angle=90) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.angle = angle;\n\t\tthis.lineWidth = 1;\n\t\tthis.strokeStyle = \"#000\";\n\t}\n\n\tforward(length) {\n\t\t//console.log(this.x, this.y)\n\t\tthis.x += length * Math.cos(Math.radians(this.angle));\n\t\tthis.y += length * Math.sin(Math.radians(this.angle));\n\t\t//console.log(this.x, this.y)\n\t}\n\n\tbackward(length) {\n\t\tthis.x -= length * Math.cos(Math.radians(this.angle));\n\t\tthis.y -= length * Math.sin(Math.radians(this.angle));\n\t}\n\n\tleft(angle) {\n\t\t//console.log(this.angle)\n\t\tthis.angle += angle;\n\t\tthis.angle = this.angle.mod(360);\n\t\t//console.log(this.angle)\n\t}\n\n\tright(angle) {\n\t\t//console.log(this.angle)\n\t\tthis.angle -= angle;\n\t\tthis.angle = this.angle.mod(360);\n\t\t//console.log(this.angle)\n\t}\n\n\tpensize(size) {\n\t\tthis.lineWidth = size;\n\t}\n\n\tpencolor(color) {\n\t\tthis.strokeStyle = color;\n\t}\n}\n\n// CTurtle\nexport class CTurtle extends Turtle {\n\n\tconstructor(x=0, y=0, angle=90, mem=true, ctx) {\n\t\tsuper(x, y, angle);\n\t\tthis.ctx = ctx;\n\t\tthis.mem = mem;\n\t\tthis.tape = [];\n\t}\n\n\tforward(length) {\n\t\tlet [fromX, fromY] = [this.x, this.y];\n\t\tsuper.forward(length);\n\t\tlet [toX, toY] = [this.x, this.y];\n\t\tlet log = { command: \"FORWARD\",\n\t\t\t\t\targs: [[fromX, fromY], \n\t\t\t\t\t\t   [toX, toY]\n\t\t\t\t\t]\n\t\t\t\t  };\n\t\tthis.mem && this.tape.push(log); \n\t}\n\n\tbackward(length) {\n\t\tlet [fromX, fromY] = [this.x, this.y];\n\t\tsuper.backward(length);\n\t\tlet [toX, toY] = [this.x, this.y];\n\t\tlet log = { command: \"FORWARD\",\n\t\t\t\t\targs: [[fromX, fromY], \n\t\t\t\t\t\t   [toX, toY]\n\t\t\t\t\t]\n\t\t\t\t  };\n\t\tthis.mem && this.tape.push(log); \n\t}\n\n\tpensize(size) {\n\t\tsuper.pensize(size);\n\t\tthis.mem && this.tape.push({ command: \"PENSIZE\", args: size }); \n\t}\n\n\tpencolor(color) {\n\t\tsuper.pencolor(color)\n\t\tthis.mem && this.tape.push({ command: \"PENCOLOR\", args: color }); \n\t}\n\n\trender() {\n\t\tlet tape = this.tape.slice();\n\t\twhile (tape.length > 0) {\n\t\t\tlet instr = tape.shift();\n\t\t\tif (instr.command == \"FORWARD\" || instr.command == \"BACKWARD\") {\n\t\t\t\tthis.ctx.beginPath();\n\t\t\t\tthis.ctx.moveTo(instr.args[0][0], instr.args[0][1]);\n\t\t\t\tthis.ctx.lineTo(instr.args[1][0], instr.args[1][1]);\n\t\t\t\tthis.ctx.stroke();\n\t\t\t\tthis.ctx.closePath();\n\t\t\t} else if (instr.command == \"PENSIZE\") {\n\t\t\t\tthis.ctx.strokeWidth = instr.args;\n\t\t\t} else if (instr.command == \"PENCOLOR\") {\n\t\t\t\tthis.ctx.strokeStyle = instr.args;\n\t\t\t}\n\t\t}\n\t}\n\n\tanimate() {\n\t\tlet tape = this.tape.slice(); \n\t\tlet mem = this.mem;\n\t\tlet ctx = this.ctx;\n\t\twindow.requestAnimationFrame(innerAnimate);\n\n\t\tfunction innerAnimate() {\n\t\t\tif (mem && tape.length > 0) {\n\t\t\t\tlet instr = tape.shift();\n\t\t\t\tif (instr.command == \"FORWARD\" || instr.command == \"BACKWARD\") {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(instr.args[0][0], instr.args[0][1]);\n\t\t\t\t\tctx.lineTo(instr.args[1][0], instr.args[1][1]);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\t\t\t\t} else if (instr.command == \"PENSIZE\") {\n\t\t\t\t\tctx.strokeWidth = instr.args;\n\t\t\t\t} else if (instr.command == \"PENCOLOR\") {\n\t\t\t\t\tctx.strokeStyle = instr.args;\n\t\t\t\t}\n\t\t\t\twindow.requestAnimationFrame(innerAnimate);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// Trignometry utilities\nNumber.prototype.mod = function(n) {\n    return ((this%n)+n)%n;\n};\n\nMath.radians = function(degrees) {\n  return degrees * Math.PI / 180;\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}